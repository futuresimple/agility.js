// Generated by CoffeeScript 1.3.1
(function() {
  var Agility, App, root,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; },
    __slice = [].slice;

  root = this;

  Agility = {};

  App = {
    Controllers: {},
    Collections: {},
    Views: {}
  };

  if (typeof exports !== "undefined" && exports !== null) {
    exports.Agility = Agility;
    exports.App = App;
  }

  Agility.Application = (function() {

    Application.name = 'Application';

    Application.prototype.routes = {};

    function Application() {
      this.router = new Agility.Router(this);
    }

    Application.prototype.populateRoutes = function() {
      var method, path, _ref, _results;
      _ref = this.routes;
      _results = [];
      for (path in _ref) {
        method = _ref[path];
        _results.push(this.router.route(path, method));
      }
      return _results;
    };

    Application.prototype.run = function() {
      this.populateRoutes();
      return this.init();
    };

    Application.prototype.init = function() {
      Backbone.history.start({
        pushState: true,
        silent: true
      });
      return Backbone.history.loadUrl();
    };

    Application.prototype.$rootEl = function() {
      return $(this.root);
    };

    return Application;

  })();

  Agility.Collection = (function(_super) {

    __extends(Collection, _super);

    Collection.name = 'Collection';

    function Collection() {
      return Collection.__super__.constructor.apply(this, arguments);
    }

    return Collection;

  })(Backbone.Collection);

  Agility.Controller = (function() {

    Controller.name = 'Controller';

    function Controller(app) {
      this.app = app;
    }

    Controller.prototype.view = function(name, params) {
      var view_class;
      view_class = App.Views[name];
      if (view_class != null) {
        return new view_class(this.app, params);
      } else {
        throw new Error("View " + name + " not found");
      }
    };

    return Controller;

  })();

  Agility.Router = (function() {

    Router.name = 'Router';

    function Router(app) {
      this.router = new Backbone.Router;
      this.app = app;
    }

    Router.prototype.route = function(path, action) {
      var _this = this;
      return this.router.route(path, action, function() {
        var params;
        params = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        return _this.dispatch(action, params);
      });
    };

    Router.prototype.dispatch = function(action, params) {
      var controller, instance, method, _ref;
      _ref = action.split("#"), controller = _ref[0], method = _ref[1];
      instance = new App.Controllers[controller](this.app);
      return instance[method].apply(instance, params);
    };

    return Router;

  })();

  Agility.Template = {
    templates: {},
    clearTemplates: function() {
      return this.templates = {};
    },
    register: function(name, html) {
      return Handlebars.templates[name] = Handlebars.compile(html);
    },
    find: function(name) {
      return Handlebars.templates[name];
    },
    render: function(name, data, options) {
      var template;
      template = this.find(name);
      if (template) {
        return template(data, options);
      } else {
        throw new Error("Template " + name + " not found");
      }
    }
  };

  Agility.View = (function(_super) {

    __extends(View, _super);

    View.name = 'View';

    function View() {
      var app, options;
      app = arguments[0], options = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      this.app = app;
      View.__super__.constructor.apply(this, options);
    }

    View.prototype.appRoot = function() {
      return this.app.$rootEl();
    };

    View.prototype.extraContext = function() {
      return {};
    };

    View.prototype.render = function() {
      var context, html;
      context = _.extend({}, this.options, this.extraContext());
      html = Agility.Template.render(this.template, context);
      return this.$el.html(html);
    };

    return View;

  })(Backbone.View);

}).call(this);
